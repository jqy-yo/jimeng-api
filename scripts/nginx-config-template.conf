# Nginx 配置文件模板 - Jimeng API
# 文件位置: /etc/nginx/sites-available/jimeng-api
# 使用方法:
#   1. 将此文件复制到 /etc/nginx/sites-available/jimeng-api
#   2. 修改 server_name 为您的域名
#   3. 创建软链接: ln -s /etc/nginx/sites-available/jimeng-api /etc/nginx/sites-enabled/
#   4. 测试配置: nginx -t
#   5. 重启 Nginx: systemctl reload nginx

# HTTP 配置（如果使用 HTTPS，Certbot 会自动修改此文件）
server {
    listen 80;
    listen [::]:80;

    # 修改为您的域名
    server_name api.yourdomain.com;

    # 访问日志
    access_log /var/log/nginx/jimeng-api-access.log;
    error_log /var/log/nginx/jimeng-api-error.log;

    # 限制请求体大小（上传图片和视频需要）
    client_max_body_size 100M;

    # 主要路由 - 反向代理到 Docker 容器
    location / {
        proxy_pass http://localhost:5100;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 超时设置（支持长轮询，图像生成需要1-3分钟，视频需要3-15分钟）
        proxy_connect_timeout 900s;
        proxy_send_timeout 900s;
        proxy_read_timeout 900s;

        # 缓冲设置
        proxy_buffering off;
        proxy_request_buffering off;

        # WebSocket 支持（用于流式响应）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # 健康检查端点（可选）
    location /ping {
        proxy_pass http://localhost:5100/ping;
        access_log off;
    }

    # 静态文件缓存（如果有）
    location /public/ {
        proxy_pass http://localhost:5100/public/;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
}

# HTTPS 配置示例（Certbot 会自动生成，这里仅供参考）
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#
#     server_name api.yourdomain.com;
#
#     # SSL 证书（由 Certbot 自动配置）
#     ssl_certificate /etc/letsencrypt/live/api.yourdomain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.yourdomain.com/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#     # 其他配置同上...
# }

# HTTP 到 HTTPS 重定向（Certbot 自动配置）
# server {
#     if ($host = api.yourdomain.com) {
#         return 301 https://$host$request_uri;
#     }
#
#     listen 80;
#     listen [::]:80;
#     server_name api.yourdomain.com;
#     return 404;
# }
